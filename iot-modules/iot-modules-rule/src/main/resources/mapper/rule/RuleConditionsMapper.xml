<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.rule.mapper.RuleConditionsMapper">
  <resultMap id="BaseResultMap" type="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    <!--@Table rule_conditions-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="rule_id" jdbcType="BIGINT" property="ruleId" />
    <result column="condition_type" jdbcType="BIGINT" property="conditionType" />
    <result column="device_identification" jdbcType="VARCHAR" property="deviceIdentification" />
    <result column="product_identification" jdbcType="VARCHAR" property="productIdentification" />
    <result column="service_id" jdbcType="BIGINT" property="serviceId" />
    <result column="properties_id" jdbcType="BIGINT" property="propertiesId" />
    <result column="comparison_mode" jdbcType="VARCHAR" property="comparisonMode" />
    <result column="comparison_value" jdbcType="VARCHAR" property="comparisonValue" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, rule_id, condition_type, device_identification, product_identification, service_id,
    properties_id, comparison_mode, comparison_value, create_time, create_by, update_by,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from rule_conditions
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByRuleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from rule_conditions
    where rule_id = #{ruleId,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from rule_conditions
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    insert into rule_conditions
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ruleId != null">
              rule_id,
            </if>
            <if test="conditionType != null">
              condition_type,
            </if>
            <if test="deviceIdentification != null">
              device_identification,
            </if>
            <if test="productIdentification != null">
              product_identification,
            </if>
            <if test="serviceId != null">
              service_id,
            </if>
            <if test="propertiesId != null">
              properties_id,
            </if>
            <if test="comparisonMode != null">
              comparison_mode,
            </if>
            <if test="comparisonValue != null">
              comparison_value,
            </if>
            <if test="createTime != null">
              create_time,
            </if>
            <if test="createBy != null">
              create_by,
            </if>
            <if test="updateBy != null">
              update_by,
            </if>
            <if test="updateTime != null">
              update_time,
            </if>
          </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
              <if test="ruleId != null">
                #{ruleId,jdbcType=BIGINT},
              </if>
              <if test="conditionType != null">
                #{conditionType,jdbcType=BIGINT},
              </if>
              <if test="deviceIdentification != null">
                #{deviceIdentification,jdbcType=VARCHAR},
              </if>
              <if test="productIdentification != null">
                #{productIdentification,jdbcType=VARCHAR},
              </if>
              <if test="serviceId != null">
                #{serviceId,jdbcType=BIGINT},
              </if>
              <if test="propertiesId != null">
                #{propertiesId,jdbcType=BIGINT},
              </if>
              <if test="comparisonMode != null">
                #{comparisonMode,jdbcType=VARCHAR},
              </if>
              <if test="comparisonValue != null">
                #{comparisonValue,jdbcType=VARCHAR},
              </if>
              <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
              </if>
              <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
              </if>
              <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
              </if>
              <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
              </if>
            </trim>
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" useGeneratedKeys="true" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    insert into rule_conditions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="conditionType != null">
        condition_type,
      </if>
      <if test="deviceIdentification != null">
        device_identification,
      </if>
      <if test="productIdentification != null">
        product_identification,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="propertiesId != null">
        properties_id,
      </if>
      <if test="comparisonMode != null">
        comparison_mode,
      </if>
      <if test="comparisonValue != null">
        comparison_value,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="conditionType != null">
        #{conditionType,jdbcType=BIGINT},
      </if>
      <if test="deviceIdentification != null">
        #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="propertiesId != null">
        #{propertiesId,jdbcType=BIGINT},
      </if>
      <if test="comparisonMode != null">
        #{comparisonMode,jdbcType=VARCHAR},
      </if>
      <if test="comparisonValue != null">
        #{comparisonValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    update rule_conditions
    <set>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="conditionType != null">
        condition_type = #{conditionType,jdbcType=BIGINT},
      </if>
      <if test="deviceIdentification != null">
        device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        product_identification = #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="propertiesId != null">
        properties_id = #{propertiesId,jdbcType=BIGINT},
      </if>
      <if test="comparisonMode != null">
        comparison_mode = #{comparisonMode,jdbcType=VARCHAR},
      </if>
      <if test="comparisonValue != null">
        comparison_value = #{comparisonValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    update rule_conditions
    set rule_id = #{ruleId,jdbcType=BIGINT},
      condition_type = #{conditionType,jdbcType=BIGINT},
      device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      product_identification = #{productIdentification,jdbcType=VARCHAR},
      service_id = #{serviceId,jdbcType=BIGINT},
      properties_id = #{propertiesId,jdbcType=BIGINT},
      comparison_mode = #{comparisonMode,jdbcType=VARCHAR},
      comparison_value = #{comparisonValue,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update rule_conditions
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="rule_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.ruleId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="condition_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.conditionType,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="device_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="product_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="service_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.serviceId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="properties_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.propertiesId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="comparison_mode = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.comparisonMode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="comparison_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.comparisonValue,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update rule_conditions
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="rule_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ruleId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.ruleId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="condition_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.conditionType != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.conditionType,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="device_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deviceIdentification != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productIdentification != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="service_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.serviceId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.serviceId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="properties_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.propertiesId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.propertiesId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="comparison_mode = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.comparisonMode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.comparisonMode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="comparison_value = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.comparisonValue != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.comparisonValue,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into rule_conditions
    ( rule_id, condition_type, device_identification, product_identification, service_id,
      properties_id, comparison_mode, comparison_value, create_by)
    values
    <foreach collection="list" item="item" separator=",">
      ( #{item.ruleId,jdbcType=BIGINT}, #{item.conditionType,jdbcType=BIGINT},
        #{item.deviceIdentification,jdbcType=VARCHAR}, #{item.productIdentification,jdbcType=VARCHAR},
        #{item.serviceId,jdbcType=BIGINT}, #{item.propertiesId,jdbcType=BIGINT}, #{item.comparisonMode,jdbcType=VARCHAR},
        #{item.comparisonValue,jdbcType=VARCHAR},  #{item.createBy,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    insert into rule_conditions
    (id, rule_id, condition_type, device_identification, product_identification, service_id,
      properties_id, comparison_mode, comparison_value, create_time, create_by, update_by,
      update_time)
    values
    (#{id,jdbcType=BIGINT}, #{ruleId,jdbcType=BIGINT}, #{conditionType,jdbcType=BIGINT},
      #{deviceIdentification,jdbcType=VARCHAR}, #{productIdentification,jdbcType=VARCHAR},
      #{serviceId,jdbcType=BIGINT}, #{propertiesId,jdbcType=BIGINT}, #{comparisonMode,jdbcType=VARCHAR},
      #{comparisonValue,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    on duplicate key update
    id = #{id,jdbcType=BIGINT},
    rule_id = #{ruleId,jdbcType=BIGINT},
    condition_type = #{conditionType,jdbcType=BIGINT},
    device_identification = #{deviceIdentification,jdbcType=VARCHAR},
    product_identification = #{productIdentification,jdbcType=VARCHAR},
    service_id = #{serviceId,jdbcType=BIGINT},
    properties_id = #{propertiesId,jdbcType=BIGINT},
    comparison_mode = #{comparisonMode,jdbcType=VARCHAR},
    comparison_value = #{comparisonValue,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=VARCHAR},
    update_by = #{updateBy,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=TIMESTAMP}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="domain.com.basiclab.iot.rule.api.RuleConditions">
    <!--@mbg.generated-->
    insert into rule_conditions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="conditionType != null">
        condition_type,
      </if>
      <if test="deviceIdentification != null">
        device_identification,
      </if>
      <if test="productIdentification != null">
        product_identification,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="propertiesId != null">
        properties_id,
      </if>
      <if test="comparisonMode != null">
        comparison_mode,
      </if>
      <if test="comparisonValue != null">
        comparison_value,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="conditionType != null">
        #{conditionType,jdbcType=BIGINT},
      </if>
      <if test="deviceIdentification != null">
        #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="propertiesId != null">
        #{propertiesId,jdbcType=BIGINT},
      </if>
      <if test="comparisonMode != null">
        #{comparisonMode,jdbcType=VARCHAR},
      </if>
      <if test="comparisonValue != null">
        #{comparisonValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=BIGINT},
      </if>
      <if test="conditionType != null">
        condition_type = #{conditionType,jdbcType=BIGINT},
      </if>
      <if test="deviceIdentification != null">
        device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        product_identification = #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="propertiesId != null">
        properties_id = #{propertiesId,jdbcType=BIGINT},
      </if>
      <if test="comparisonMode != null">
        comparison_mode = #{comparisonMode,jdbcType=VARCHAR},
      </if>
      <if test="comparisonValue != null">
        comparison_value = #{comparisonValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <delete id="deleteBatchByIds" parameterType="String">
    delete
    from rule_conditions where id in
    <foreach close=")" collection="array" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>
