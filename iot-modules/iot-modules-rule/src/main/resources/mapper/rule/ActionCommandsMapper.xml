<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.rule.mapper.ActionCommandsMapper">
  <resultMap id="BaseResultMap" type="com.basiclab.iot.rule.api.ActionCommands">
    <!--@mbg.generated-->
    <!--@Table action_commands-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="business_type" jdbcType="INTEGER" property="businessType" />
    <result column="rule_identification" jdbcType="VARCHAR" property="ruleIdentification" />
    <result column="product_identification" jdbcType="VARCHAR" property="productIdentification" />
    <result column="device_identification" jdbcType="VARCHAR" property="deviceIdentification" />
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="command_name" jdbcType="VARCHAR" property="commandName" />
    <result column="command_id" jdbcType="INTEGER" property="commandId" />
    <result column="command_body" jdbcType="LONGVARCHAR" property="commandBody" typeHandler="com.basiclab.iot.rule.common.handler.JsonTypeHandler"/>
    <result column="ctreate_by" jdbcType="VARCHAR" property="ctreateBy" />
    <result column="ctreate_time" jdbcType="TIMESTAMP" property="ctreateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, business_type, rule_identification, product_identification, device_identification, 
    service_id,service_name, command_name, command_id, command_body, ctreate_by, ctreate_time, update_by, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from action_commands
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from action_commands
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.api.ActionCommands" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into action_commands (business_type, rule_identification, 
      product_identification, device_identification, 
      service_id,service_name, command_name, command_id, command_body,
      ctreate_by, ctreate_time, update_by, 
      update_time)
    values (#{businessType,jdbcType=INTEGER}, #{ruleIdentification,jdbcType=VARCHAR}, 
      #{productIdentification,jdbcType=VARCHAR}, #{deviceIdentification,jdbcType=VARCHAR}, 
      #{serviceId,jdbcType=INTEGER},#{serviceName,jdbcType=VARCHAR}, #{commandName,jdbcType=VARCHAR}, #{commandId,jdbcType=INTEGER}, #{commandBody,jdbcType=LONGVARCHAR,typeHandler=handler.common.com.basiclab.iot.rule.JsonTypeHandler},
      #{ctreateBy,jdbcType=VARCHAR}, #{ctreateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.api.ActionCommands" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into action_commands
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessType != null">
        business_type,
      </if>
      <if test="ruleIdentification != null">
        rule_identification,
      </if>
      <if test="productIdentification != null">
        product_identification,
      </if>
      <if test="deviceIdentification != null">
        device_identification,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="serviceName != null">
        service_Name,
      </if>
      <if test="commandName != null">
        command_Name,
      </if>
      <if test="commandId != null">
        command_id,
      </if>
      <if test="commandBody != null">
        command_body,
      </if>
      <if test="ctreateBy != null">
        ctreate_by,
      </if>
      <if test="ctreateTime != null">
        ctreate_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessType != null">
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="ruleIdentification != null">
        #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="deviceIdentification != null">
        #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        service_Name,
      </if>
      <if test="commandName != null">
        command_Name,
      </if>
      <if test="commandId != null">
        #{commandId,jdbcType=INTEGER},
      </if>
      <if test="commandBody != null">
        #{commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler},
      </if>
      <if test="ctreateBy != null">
        #{ctreateBy,jdbcType=VARCHAR},
      </if>
      <if test="ctreateTime != null">
        #{ctreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.basiclab.iot.rule.api.ActionCommands">
    <!--@mbg.generated-->
    update action_commands
    <set>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="ruleIdentification != null">
        rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        product_identification = #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="deviceIdentification != null">
        device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="commandName != null">
        command_name = #{commandName,jdbcType=VARCHAR},
      </if>
      <if test="commandId != null">
        command_id = #{commandId,jdbcType=INTEGER},
      </if>
      <if test="commandBody != null">
        command_body = #{commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler},
      </if>
      <if test="ctreateBy != null">
        ctreate_by = #{ctreateBy,jdbcType=VARCHAR},
      </if>
      <if test="ctreateTime != null">
        ctreate_time = #{ctreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.basiclab.iot.rule.api.ActionCommands">
    <!--@mbg.generated-->
    update action_commands
    set business_type = #{businessType,jdbcType=INTEGER},
      rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      product_identification = #{productIdentification,jdbcType=VARCHAR},
      device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      service_id = #{serviceId,jdbcType=INTEGER},
      service_name = #{serviceName,jdbcType=VARCHAR},
      command_name = #{commandName,jdbcType=VARCHAR},
      command_id = #{commandId,jdbcType=INTEGER},
      command_body = #{commandBody,jdbcType=LONGVARCHAR,typeHandler=handler.common.com.basiclab.iot.rule.JsonTypeHandler},
      ctreate_by = #{ctreateBy,jdbcType=VARCHAR},
      ctreate_time = #{ctreateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update action_commands
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="business_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.businessType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="rule_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.ruleIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="product_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.productIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="device_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.deviceIdentification,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="service_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.serviceId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="command_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.commandId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="command_body = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler}
        </foreach>
      </trim>
      <trim prefix="ctreate_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.ctreateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="ctreate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.ctreateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update action_commands
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="business_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.businessType != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.businessType,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="rule_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ruleIdentification != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.ruleIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productIdentification != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.productIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="device_identification = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deviceIdentification != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.deviceIdentification,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="service_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.serviceId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.serviceId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="service_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.serviceName != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.serviceName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="command_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commandName != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.commandName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="command_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commandId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.commandId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="command_body = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commandBody != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler}
          </if>
        </foreach>
      </trim>
      <trim prefix="ctreate_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ctreateBy != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.ctreateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="ctreate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ctreateTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.ctreateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updateBy,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into action_commands
    (business_type, rule_identification, product_identification, device_identification,
      service_id, service_name, command_name, command_id, command_body, ctreate_by
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.businessType,jdbcType=INTEGER}, #{item.ruleIdentification,jdbcType=VARCHAR}, 
        #{item.productIdentification,jdbcType=VARCHAR}, #{item.deviceIdentification,jdbcType=VARCHAR}, 
        #{item.serviceId,jdbcType=INTEGER}, #{item.serviceName,jdbcType=VARCHAR}, #{item.commandName,jdbcType=VARCHAR},#{item.commandId,jdbcType=INTEGER}, #{item.commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler},
        #{item.ctreateBy,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.api.ActionCommands" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into action_commands
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      business_type,
      rule_identification,
      product_identification,
      device_identification,
      service_id,
      service_name,
      command_name,
      command_id,
      command_body,
      ctreate_by,
      ctreate_time,
      update_by,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{businessType,jdbcType=INTEGER},
      #{ruleIdentification,jdbcType=VARCHAR},
      #{productIdentification,jdbcType=VARCHAR},
      #{deviceIdentification,jdbcType=VARCHAR},
      #{serviceId,jdbcType=INTEGER},
      #{serviceName,jdbcType=VARCHAR},
      #{commandName,jdbcType=VARCHAR},
      #{commandId,jdbcType=INTEGER},
      #{commandBody,jdbcType=LONGVARCHAR,typeHandler=handler.common.com.basiclab.iot.rule.JsonTypeHandler},
      #{ctreateBy,jdbcType=VARCHAR},
      #{ctreateTime,jdbcType=TIMESTAMP},
      #{updateBy,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      business_type = #{businessType,jdbcType=INTEGER},
      rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      product_identification = #{productIdentification,jdbcType=VARCHAR},
      device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      service_id = #{serviceId,jdbcType=INTEGER},
      command_id = #{commandId,jdbcType=INTEGER},
      command_body = #{commandBody,jdbcType=LONGVARCHAR,typeHandler=handler.common.com.basiclab.iot.rule.JsonTypeHandler},
      ctreate_by = #{ctreateBy,jdbcType=VARCHAR},
      ctreate_time = #{ctreateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.basiclab.iot.rule.api.ActionCommands" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into action_commands
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="ruleIdentification != null">
        rule_identification,
      </if>
      <if test="productIdentification != null">
        product_identification,
      </if>
      <if test="deviceIdentification != null">
        device_identification,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="commandName != null">
        command_name,
      </if>
      <if test="commandId != null">
        command_id,
      </if>
      <if test="commandBody != null">
        command_body,
      </if>
      <if test="ctreateBy != null">
        ctreate_by,
      </if>
      <if test="ctreateTime != null">
        ctreate_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="ruleIdentification != null">
        #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="deviceIdentification != null">
        #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="commandName != null">
        #{commandName,jdbcType=VARCHAR},
      </if>
      <if test="commandId != null">
        #{commandId,jdbcType=INTEGER},
      </if>
      <if test="commandBody != null">
        #{commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler},
      </if>
      <if test="ctreateBy != null">
        #{ctreateBy,jdbcType=VARCHAR},
      </if>
      <if test="ctreateTime != null">
        #{ctreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="ruleIdentification != null">
        rule_identification = #{ruleIdentification,jdbcType=VARCHAR},
      </if>
      <if test="productIdentification != null">
        product_identification = #{productIdentification,jdbcType=VARCHAR},
      </if>
      <if test="deviceIdentification != null">
        device_identification = #{deviceIdentification,jdbcType=VARCHAR},
      </if>
      <if test="serviceId != null">
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="commandName != null">
        command_name = #{commandName,jdbcType=VARCHAR},
      </if>
      <if test="commandId != null">
        command_id = #{commandId,jdbcType=INTEGER},
      </if>
      <if test="commandBody != null">
        command_body = #{commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler},
      </if>
      <if test="ctreateBy != null">
        ctreate_by = #{ctreateBy,jdbcType=VARCHAR},
      </if>
      <if test="ctreateTime != null">
        ctreate_time = #{ctreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="selectByActionCommandsSelective" parameterType="com.basiclab.iot.rule.api.ActionCommands" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from action_commands
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="businessType != null">
        and business_type = #{businessType,jdbcType=INTEGER}
      </if>
      <if test="ruleIdentification != null">
        and rule_identification = #{ruleIdentification,jdbcType=VARCHAR}
      </if>
      <if test="productIdentification != null">
        and product_identification = #{productIdentification,jdbcType=VARCHAR}
      </if>
      <if test="deviceIdentification != null">
        and device_identification = #{deviceIdentification,jdbcType=VARCHAR}
      </if>
      <if test="serviceId != null">
        and service_id = #{serviceId,jdbcType=INTEGER}
      </if>
      <if test="commandId != null">
        and command_id = #{commandId,jdbcType=INTEGER}
      </if>
      <if test="commandBody != null">
        and command_body = #{commandBody,jdbcType=LONGVARCHAR,typeHandler=com.basiclab.iot.rule.common.handler.JsonTypeHandler}
      </if>
      <if test="ctreateBy != null">
        and ctreate_by = #{ctreateBy,jdbcType=VARCHAR}
      </if>
      <if test="ctreateTime != null">
        and ctreate_time = #{ctreateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateBy != null">
        and update_by = #{updateBy,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>

  <select id="actionCommandsByRuleIdentification" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from action_commands
    where rule_identification = #{ruleIdentification}
  </select>

  <delete id="deleteBatchByIds" parameterType="String">
    delete
    from action_commands where id in
    <foreach close=")" collection="array" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>