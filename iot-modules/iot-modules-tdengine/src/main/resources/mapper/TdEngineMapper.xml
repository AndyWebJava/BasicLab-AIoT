<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.tdengine.mapper.TdEngineMapper">

    <update id="createDatabase" parameterType="String">
        create
        database if not exists
        #{dataBaseName}
    </update>

    <update id="createSuperTableAndColumn"
            parameterType="model.domain.com.basiclab.iot.tdengine.api.SuperTableDTO">
        create table if not exists #{dataBaseName}.#{superTableName}
        <foreach item="item" collection="schemaFields" separator=","
                 open="(" close=")" index="">
            <if test="item.fieldName != null || item.fieldName != ''">
                ${item.fieldName}
            </if>
            <if test="item.dataType != null">
                ${item.dataType}
                <!-- 当dataType.quoted为true时添加size -->
                <if test="item.dataType.quoted == true and item.size != null">
                    (#{item.size})
                </if>
            </if>
        </foreach>
        tags
        <!-- tdEngine不支持动态tags里的数据类型，只能使用choose标签比对 -->
        <foreach item="item" collection="tagsFields" separator=","
                 open="(" close=")" index="">
            <if test="item.fieldName != null || item.fieldName != ''">
                ${item.fieldName}
            </if>
            <if test="item.dataType != null">
                ${item.dataType}
                <!-- 当dataType.quoted为true时添加size -->
                <if test="item.dataType.quoted == true and item.size != null">
                    (#{item.size})
                </if>
            </if>
        </foreach>
    </update>


    <update id="createSubTable" parameterType="model.domain.com.basiclab.iot.tdengine.api.TableDTO">
        create table if not exists #{dataBaseName}.#{tableName}
        using #{dataBaseName}.#{superTableName}
        tags
        <foreach item="item" collection="tagsFieldValues" separator=","
                 open="(" close=")" index="">
            <choose>
                <!-- Check if dataType is not null and needs quoting -->
                <when test="item.dataType != null and item.dataType.quoted">
                    '${item.fieldValue}'
                </when>
                <!-- Default behavior if dataType is null (no quotes in this case) -->
                <when test="item.dataType == null">
                    ${item.fieldValue}
                </when>
                <!-- If dataType doesn't require quotes -->
                <otherwise>
                    ${item.fieldValue}
                </otherwise>
            </choose>
        </foreach>
    </update>

    <update id="alterSuperTableColumn">
        ALTER
        STABLE
        #{dataBaseName}.#{superTableName}
        ADD
        COLUMN
        <if test="fields.fieldName != null || fields.fieldName != ''">
            ${fields.fieldName}
        </if>
        <if test="fields.dataType != null || fields.dataType != ''">
            ${fields.dataType}
            <!-- 当dataType.quoted为true时添加size -->
            <if test="fields.dataType.quoted == true and fields.size != null">
                (#{fields.size})
            </if>
        </if>
    </update>

    <update id="alterSuperTableTag">
        ALTER
        STABLE
        #{dataBaseName}.#{superTableName}
        ADD
        TAG
        <if test="fields.fieldName != null || fields.fieldName != ''">
            ${fields.fieldName}
        </if>
        <if test="fields.dataType != null || fields.dataType != ''">
            ${fields.dataType}
            <!-- 当dataType.quoted为true时添加size -->
            <if test="fields.dataType.quoted == true and fields.size != null">
                (#{fields.size})
            </if>
        </if>
    </update>

    <update id="alterSuperTableTagRename">
        ALTER
        #{dataBaseName}.
        #{superTableName}
        RENAME
        TAG
        ${oldName}
        ${newName};
    </update>

    <update id="createSuperTable">
        create table if not exists #{dataBaseName}.#{superTableName}
    </update>

    <delete id="dropSuperTable">
        DROP
        STABLE IF EXISTS
        #{dataBaseName}
        .
        #{superTableName}
    </delete>

    <delete id="dropSuperTableColumn">
        ALTER
        STABLE
        #{dataBaseName}.#{superTableName}
        DROP
        COLUMN
        <if test="fields.fieldName != null || fields.fieldName != ''">
            ${fields.fieldName}
        </if>
    </delete>

    <delete id="dropSuperTableTag">
        ALTER
        STABLE
        #{dataBaseName}.#{superTableName}
        DROP
        TAG
        <if test="fields.fieldName != null || fields.fieldName != ''">
            ${fields.fieldName}
        </if>
    </delete>

    <select id="describeSuperOrSubTable" resultType="domain.com.basiclab.iot.tdengine.api.SuperTableDescribeVO">
        DESCRIBE #{dataBaseName}.#{tableName};
    </select>

    <insert id="insertTableData">
        insert into #{dataBaseName}.#{tableName}
        <foreach item="item" collection="schemaFieldValues" separator=","
                 open="(" close=")" index="">
            ${item.fieldName}
        </foreach>
        using #{dataBaseName}.#{superTableName}
        tags
        <foreach item="item" collection="tagsFieldValues" separator=","
                 open="(" close=")" index="">
            <choose>
                <!-- Check if dataType is not null and needs quoting -->
                <when test="item.dataType != null and item.dataType.quoted">
                    '${item.fieldValue}'
                </when>
                <!-- Default behavior if dataType is null (no quotes in this case) -->
                <when test="item.dataType == null">
                    ${item.fieldValue}
                </when>
                <!-- If dataType doesn't require quotes -->
                <otherwise>
                    ${item.fieldValue}
                </otherwise>
            </choose>
        </foreach>
        values
        <foreach item="item" collection="schemaFieldValues" separator=","
                 open="(" close=")" index="">
            <choose>
                <!-- Check if dataType is not null and needs quoting -->
                <when test="item.dataType != null and item.dataType.quoted">
                    '${item.fieldValue}'
                </when>
                <!-- Default behavior if dataType is null (no quotes in this case) -->
                <when test="item.dataType == null">
                    ${item.fieldValue}
                </when>
                <!-- If dataType doesn't require quotes -->
                <otherwise>
                    ${item.fieldValue}
                </otherwise>
            </choose>
        </foreach>
    </insert>

    <select id="getLastDataByTags" parameterType="model.domain.com.basiclab.iot.tdengine.api.TagsSelectDTO"
            resultType="Map">
        <!-- 判断startTime和endTime是否都存在 -->
        <choose>
            <!-- 如果startTime和endTime都存在，按时间范围查询最新的一条记录 -->
            <when test="startTime != null and endTime != null">
                select * from #{dataBaseName}.#{stableName}
                where ts BETWEEN #{startTime} AND #{endTime}
                group by #{tagsName}
                order by ts desc
                LIMIT 1
            </when>
            <!-- 否则使用last来查询最新的一条记录 -->
            <otherwise>
                select last(*) from #{dataBaseName}.#{stableName} group by #{tagsName}
            </otherwise>
        </choose>
    </select>

    <select id="getDataInRangeOrLastRecord" resultType="Map">
        <!-- 判断startTime和endTime是否都存在 -->
        <choose>
            <!-- 如果startTime和endTime都存在，按时间范围查询记录 -->
            <when test="startTime != null and endTime != null">
                select * from #{dataBaseName}.#{tableName}
                where ts BETWEEN #{startTime} AND #{endTime}
                order by ts desc
            </when>
            <!-- 否则使用last来查询最新的一条记录 -->
            <otherwise>
                select last(*) from #{dataBaseName}.#{tableName}
            </otherwise>
        </choose>
    </select>

    <select id="selectByTimestamp" parameterType="domain.com.basiclab.iot.tdengine.api.SelectDto"
            resultType="Map">
        select * from #{dataBaseName}.#{tableName}
        <!--查询这里不能使用#{}占位符的方式，使用这种方式，tdEngine不识别为列名，只能使用${}占位的方式-->
        <!--因为tdEngine引擎一次只执行一条sql，所以有效预防了sql的注入，且该服务该接口为内部调用，所以可以使用${}-->
        where ${fieldName}
        between #{startTime} and #{endTime}
    </select>

    <select id="getLastData" parameterType="domain.com.basiclab.iot.tdengine.api.SelectDto"
            resultType="Map">
        select last (*)
        from #{dataBaseName}.#{tableName}
    </select>

</mapper>
