<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.link.mapper.device.DeviceActionMapper">
    <resultMap id="BaseResultMap" type="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        <!--@mbg.generated-->
        <!--@Table device_action-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="device_identification" jdbcType="VARCHAR" property="deviceIdentification"/>
        <result column="action_type" jdbcType="VARCHAR" property="actionType"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        <!--@mbg.generated-->
        <!--@Table device_action-->
        <result column="message" jdbcType="LONGVARCHAR" property="message"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        device_identification,
        action_type,
        `status`,
        create_time
    </sql>
    <sql id="selectDeviceActionVo">
        select id, device_identification, action_type, message, status, create_time
        from device_action
    </sql>
    <sql id="Blob_Column_List">
        <!--@mbg.generated-->
        `message`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from device_action
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from device_action
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action (device_identification, action_type,
                                   `status`, create_time, `message`)
        values (#{deviceIdentification,jdbcType=VARCHAR}, #{actionType,jdbcType=VARCHAR},
                #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{message,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification,
            </if>
            <if test="actionType != null and actionType != ''">
                action_type,
            </if>
            <if test="status != null and status != ''">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="message != null and message != ''">
                `message`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null and deviceIdentification != ''">
                #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="actionType != null and actionType != ''">
                #{actionType,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message != null and message != ''">
                #{message,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        <!--@mbg.generated-->
        update device_action
        <set>
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="actionType != null and actionType != ''">
                action_type = #{actionType,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message != null and message != ''">
                `message` = #{message,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        <!--@mbg.generated-->
        update device_action
        set device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            action_type           = #{actionType,jdbcType=VARCHAR},
            `status`              = #{status,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
            `message`             = #{message,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        <!--@mbg.generated-->
        update device_action
        set device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            action_type           = #{actionType,jdbcType=VARCHAR},
            `status`              = #{status,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
            `message`             = #{message,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update device_action
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="device_identification = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="action_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.actionType,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="`message` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.message,jdbcType=LONGVARCHAR}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update device_action
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="device_identification = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.deviceIdentification != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="action_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.actionType != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.actionType,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.status != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`message` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.message != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.message,jdbcType=LONGVARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action
            (device_identification, action_type, `status`, create_time, `message`)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.deviceIdentification,jdbcType=VARCHAR}, #{item.actionType,jdbcType=VARCHAR},
             #{item.status,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
             #{item.message,jdbcType=LONGVARCHAR})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            device_identification,
            action_type,
            `message`,
            `status`,
            create_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{deviceIdentification,jdbcType=VARCHAR},
            #{actionType,jdbcType=VARCHAR},
            #{message,jdbcType=LONGVARCHAR},
            #{status,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            action_type           = #{actionType,jdbcType=VARCHAR},
            `message`             = #{message,jdbcType=LONGVARCHAR},
            `status`              = #{status,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateWithBLOBs" keyColumn="id" keyProperty="id"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            device_identification,
            action_type,
            `status`,
            create_time,
            `message`,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{deviceIdentification,jdbcType=VARCHAR},
            #{actionType,jdbcType=VARCHAR},
            #{status,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{message,jdbcType=LONGVARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            action_type           = #{actionType,jdbcType=VARCHAR},
            `status`              = #{status,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
            `message`             = #{message,jdbcType=LONGVARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_action
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification,
            </if>
            <if test="actionType != null and actionType != ''">
                action_type,
            </if>
            <if test="status != null and status != ''">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="message != null and message != ''">
                `message`,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="deviceIdentification != null and deviceIdentification != ''">
                #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="actionType != null and actionType != ''">
                #{actionType,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message != null and message != ''">
                #{message,jdbcType=LONGVARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="actionType != null and actionType != ''">
                action_type = #{actionType,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="message != null and message != ''">
                `message` = #{message,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="selectDeviceActionList"
            parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction"
            resultMap="BaseResultMap">
        <include refid="selectDeviceActionVo"/>
        <where>
            <if test="deviceIdentification != null  and deviceIdentification != ''">
                and device_identification = #{deviceIdentification}
            </if>
            <if test="actionType != null  and actionType != ''">
                and action_type = #{actionType}
            </if>
            <if test="message != null  and message != ''">
                and message = #{message}
            </if>
            <if test="status != null  and status != ''">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="selectDeviceActionById" parameterType="Long" resultMap="BaseResultMap">
        <include refid="selectDeviceActionVo"/>
        where id = #{id}
    </select>

    <insert id="insertDeviceAction" parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction"
            useGeneratedKeys="true" keyProperty="id">
        insert into device_action
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null">
                device_identification,
            </if>
            <if test="actionType != null">
                action_type,
            </if>
            <if test="message != null">
                message,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null">
                #{deviceIdentification},
            </if>
            <if test="actionType != null">
                #{actionType},
            </if>
            <if test="message != null">
                #{message},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>

    <update id="updateDeviceAction" parameterType="com.basiclab.iot.link.api.domain.device.entity.DeviceAction">
        update device_action
        <trim prefix="SET" suffixOverrides=",">
            <if test="deviceIdentification != null">
                device_identification = #{deviceIdentification},
            </if>
            <if test="actionType != null">
                action_type = #{actionType},
            </if>
            <if test="message != null">
                message = #{message},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDeviceActionById" parameterType="Long">
        delete
        from device_action
        where id = #{id}
    </delete>

    <delete id="deleteDeviceActionByIds" parameterType="String">
        delete
        from device_action where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>