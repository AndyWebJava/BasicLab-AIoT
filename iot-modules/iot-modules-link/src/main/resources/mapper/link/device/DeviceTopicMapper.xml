<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.basiclab.iot.link.mapper.device.DeviceTopicMapper">
    <resultMap id="BaseResultMap" type="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic">
        <!--@mbg.generated-->
        <!--@Table device_topic-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="device_identification" jdbcType="VARCHAR" property="deviceIdentification"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="topic" jdbcType="VARCHAR" property="topic"/>
        <result column="publisher" jdbcType="VARCHAR" property="publisher"/>
        <result column="subscriber" jdbcType="VARCHAR" property="subscriber"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        device_identification,
        `type`,
        topic,
        publisher,
        subscriber,
        create_by,
        create_time,
        update_by,
        update_time,
        remark
    </sql>

    <sql id="selectDeviceTopicVo">
        select id,
               device_identification,
               type,
               topic,
               publisher,
               subscriber,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from device_topic
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from device_topic
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from device_topic
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_topic (device_identification, `type`, topic,
                                  publisher, subscriber, create_by,
                                  create_time, update_by, update_time,
                                  remark)
        values (#{deviceIdentification,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{topic,jdbcType=VARCHAR},
                #{publisher,jdbcType=VARCHAR}, #{subscriber,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
                #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_topic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null">
                device_identification,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="topic != null">
                topic,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="subscriber != null">
                subscriber,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null">
                #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                #{topic,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="subscriber != null">
                #{subscriber,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic">
        <!--@mbg.generated-->
        update device_topic
        <set>
            <if test="deviceIdentification != null">
                device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                topic = #{topic,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                publisher = #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="subscriber != null">
                subscriber = #{subscriber,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic">
        <!--@mbg.generated-->
        update device_topic
        set device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            `type`                = #{type,jdbcType=VARCHAR},
            topic                 = #{topic,jdbcType=VARCHAR},
            publisher             = #{publisher,jdbcType=VARCHAR},
            subscriber            = #{subscriber,jdbcType=VARCHAR},
            create_by             = #{createBy,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
            update_by             = #{updateBy,jdbcType=VARCHAR},
            update_time           = #{updateTime,jdbcType=TIMESTAMP},
            remark                = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update device_topic
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="device_identification = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="`type` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="topic = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.topic,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="publisher = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.publisher,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="subscriber = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.subscriber,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update device_topic
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="deviceIdentification = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.deviceIdentification != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.deviceIdentification,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`type` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.type != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="topic = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.topic != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.topic,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="publisher = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.publisher != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.publisher,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="subscriber = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.subscriber != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.subscriber,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createBy != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createBy,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateBy != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateBy,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.updateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_topic
        (device_identification, `type`, topic, publisher, subscriber, create_by, create_time,
         update_by, update_time, remark)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.deviceIdentification,jdbcType=VARCHAR}, #{item.type,jdbcType=VARCHAR},
             #{item.topic,jdbcType=VARCHAR},
             #{item.publisher,jdbcType=VARCHAR}, #{item.subscriber,jdbcType=VARCHAR}, #{item.createBy,jdbcType=VARCHAR},
             #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR},
             #{item.updateTime,jdbcType=TIMESTAMP},
             #{item.remark,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id"
            parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_topic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            device_identification,
            `type`,
            topic,
            publisher,
            subscriber,
            create_by,
            create_time,
            update_by,
            update_time,
            remark,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{deviceIdentification,jdbcType=VARCHAR},
            #{type,jdbcType=VARCHAR},
            #{topic,jdbcType=VARCHAR},
            #{publisher,jdbcType=VARCHAR},
            #{subscriber,jdbcType=VARCHAR},
            #{createBy,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateBy,jdbcType=VARCHAR},
            #{updateTime,jdbcType=TIMESTAMP},
            #{remark,jdbcType=VARCHAR},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            `type`                = #{type,jdbcType=VARCHAR},
            topic                 = #{topic,jdbcType=VARCHAR},
            publisher             = #{publisher,jdbcType=VARCHAR},
            subscriber            = #{subscriber,jdbcType=VARCHAR},
            create_by             = #{createBy,jdbcType=VARCHAR},
            create_time           = #{createTime,jdbcType=TIMESTAMP},
            update_by             = #{updateBy,jdbcType=VARCHAR},
            update_time           = #{updateTime,jdbcType=TIMESTAMP},
            remark                = #{remark,jdbcType=VARCHAR},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into device_topic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="deviceIdentification != null">
                device_identification,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="topic != null">
                topic,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="subscriber != null">
                subscriber,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="deviceIdentification != null">
                #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                #{topic,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="subscriber != null">
                #{subscriber,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="deviceIdentification != null">
                device_identification = #{deviceIdentification,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                topic = #{topic,jdbcType=VARCHAR},
            </if>
            <if test="publisher != null">
                publisher = #{publisher,jdbcType=VARCHAR},
            </if>
            <if test="subscriber != null">
                subscriber = #{subscriber,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="selectDeviceTopicList" parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic"
            resultMap="BaseResultMap">
        <include refid="selectDeviceTopicVo"/>
        <where>
            <if test="deviceIdentification != null  and deviceIdentification != ''">
                and device_identification = #{deviceIdentification}
            </if>
            <if test="type != null  and type != ''">
                and type = #{type}
            </if>
            <if test="topic != null  and topic != ''">
                and topic = #{topic}
            </if>
            <if test="publisher != null  and publisher != ''">
                and publisher = #{publisher}
            </if>
            <if test="subscriber != null  and subscriber != ''">
                and subscriber = #{subscriber}
            </if>
        </where>
    </select>

    <select id="selectDeviceTopicById" parameterType="Long" resultMap="BaseResultMap">
        <include refid="selectDeviceTopicVo"/>
        where id = #{id}
    </select>

    <insert id="insertDeviceTopic" parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic"
            useGeneratedKeys="true" keyProperty="id">
        insert into device_topic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="topic != null">
                topic,
            </if>
            <if test="publisher != null">
                publisher,
            </if>
            <if test="subscriber != null">
                subscriber,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deviceIdentification != null and deviceIdentification != ''">
                #{deviceIdentification},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="topic != null">
                #{topic},
            </if>
            <if test="publisher != null">
                #{publisher},
            </if>
            <if test="subscriber != null">
                #{subscriber},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
        </trim>
    </insert>

    <update id="updateDeviceTopic" parameterType="entity.device.domain.com.basiclab.iot.link.api.DeviceTopic">
        update device_topic
        <trim prefix="SET" suffixOverrides=",">
            <if test="deviceIdentification != null and deviceIdentification != ''">
                device_identification = #{deviceIdentification},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="topic != null">
                topic = #{topic},
            </if>
            <if test="publisher != null">
                publisher = #{publisher},
            </if>
            <if test="subscriber != null">
                subscriber = #{subscriber},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDeviceTopicById" parameterType="Long">
        delete
        from device_topic
        where id = #{id}
    </delete>

    <delete id="deleteDeviceTopicByIds" parameterType="String">
        delete
        from device_topic where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>